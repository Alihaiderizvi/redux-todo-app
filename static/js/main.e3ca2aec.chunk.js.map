{"version":3,"sources":["components/Todo.js","Redux/actions/Index.js","App.js","Redux/reducers/TodoReducer.js","Redux/reducers/Index.js","Redux/Store.js","index.js"],"names":["Todo","useState","inputData","setInputData","list","useSelector","state","TodoReducer","dispatch","useDispatch","className","type","placeholder","value","onChange","event","target","onClick","data","payload","id","Date","getTime","toString","map","e","title","App","initialState","action","newList","filter","rootReducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"iOAgEeA,EA3DF,WACZ,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMC,YAAYH,QAChDI,EAAWC,cACjB,OACC,mCACC,qBAAKC,UAAU,WAAf,SACC,sBAAKA,UAAU,YAAf,UACC,iCACC,0DAGD,sBAAKA,UAAU,WAAf,UACC,uBACCC,KAAK,OACLD,UAAU,GACVE,YAAY,YACZC,MAAOX,EACPY,SAAU,SAACC,GACVZ,EAAaY,EAAMC,OAAOH,UAG5B,mBACCH,UAAU,qBACVO,QAAS,kBAAMT,GC5BEU,ED4BehB,EC3B/B,CACNS,KAAM,WACNQ,QAAS,CACRC,IAAI,IAAIC,MAAOC,UAAUC,WACzBL,KAAMA,KDuB0Cf,EAAa,KC5BzC,IAACe,QDgCnB,qBAAKR,UAAU,YAAf,SACEN,EAAKoB,KAAI,SAACC,GAAD,OACT,sBAAKf,UAAU,WAAf,UACC,6BAAKe,EAAEP,OACP,qBAAKR,UAAU,WAAf,SACC,mBACCA,UAAU,2BACVgB,MAAM,cACNT,QAAS,kBAAMT,EC9BjB,CACNG,KAAM,cACNS,GD4B2CK,EAAEL,YANTK,EAAEL,SAanC,qBAAKV,UAAU,YAAf,SACC,wBACCA,UAAU,eACV,oBAAkB,aAClBO,QAAS,kBAAMT,ECnCd,CACNG,KAAM,iBD+BF,SAKC,0DE5CQgB,EARH,WACX,OACC,mCACC,cAAC,EAAD,O,sBCJGC,EAAe,CACpBxB,KAAM,IAmCQG,EAhCK,WAAmC,IAAlCD,EAAiC,uDAAzBsB,EAAcC,EAAW,uCACrD,OAAQA,EAAOlB,MACd,IAAK,WACJ,MAAqBkB,EAAOV,QAApBC,EAAR,EAAQA,GAAIF,EAAZ,EAAYA,KACZ,OAAO,2BACHZ,GADJ,IAECF,KAAK,GAAD,mBACAE,EAAMF,MADN,CAEH,CACCgB,GAAIA,EACJF,KAAMA,OAKV,IAAK,cACJ,IAAMY,EAAUxB,EAAMF,KAAK2B,QAAO,SAACN,GAAD,OAAOA,EAAEL,KAAOS,EAAOT,MAEzD,OAAO,2BACHd,GADJ,IAECF,KAAM0B,IAGR,IAAK,cACJ,MAAO,CACN1B,KAAM,IAER,QACC,OAAOE,ICzBK0B,EAJKC,YAAgB,CACnC1B,gBCKc2B,EALDC,YACbH,EACAI,OAAOC,8BAAgCD,OAAOC,gCCD/CC,IAASC,OACR,mCACC,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SAEC,cAAC,EAAD,QAGFM,SAASC,eAAe,W","file":"static/js/main.e3ca2aec.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addTodo, deleteTodo, removeTodo } from \"../Redux/actions/Index\";\r\nimport \"./todo.css\";\r\n\r\nconst Todo = () => {\r\n\tconst [inputData, setInputData] = useState(\"\");\r\n\t// To Get Data from redux store\r\n\tconst list = useSelector((state) => state.TodoReducer.list);\r\n\tconst dispatch = useDispatch();\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='main-div'>\r\n\t\t\t\t<div className='child-div'>\r\n\t\t\t\t\t<figure>\r\n\t\t\t\t\t\t<figcaption>Add List Items</figcaption>\r\n\t\t\t\t\t</figure>\r\n\r\n\t\t\t\t\t<div className='addItems'>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tclassName=''\r\n\t\t\t\t\t\t\tplaceholder='Add Items'\r\n\t\t\t\t\t\t\tvalue={inputData}\r\n\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\tsetInputData(event.target.value);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName='fa fa-plus add-btn'\r\n\t\t\t\t\t\t\tonClick={() => dispatch(addTodo(inputData), setInputData(\"\"))}\r\n\t\t\t\t\t\t></i>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='showItems'>\r\n\t\t\t\t\t\t{list.map((e) => (\r\n\t\t\t\t\t\t\t<div className='eachItem' key={e.id}>\r\n\t\t\t\t\t\t\t\t<h3>{e.data}</h3>\r\n\t\t\t\t\t\t\t\t<div className='todo-btn'>\r\n\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\tclassName='far fa-trash-alt add-btn'\r\n\t\t\t\t\t\t\t\t\t\ttitle='Delete Item'\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => dispatch(deleteTodo(e.id))}\r\n\t\t\t\t\t\t\t\t\t></i>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='showItems'>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName='btn effect04'\r\n\t\t\t\t\t\t\tdata-sm-link-text='Remove All'\r\n\t\t\t\t\t\t\tonClick={() => dispatch(removeTodo())}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<span>Check List</span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Todo;\r\n","// All Of the Actions that your app would ne performing should be mentioned in this file.\r\n\r\nexport const addTodo = (data) => {\r\n\treturn {\r\n\t\ttype: \"ADD_TODO\",\r\n\t\tpayload: {\r\n\t\t\tid: new Date().getTime().toString(),\r\n\t\t\tdata: data,\r\n\t\t},\r\n\t};\r\n};\r\nexport const deleteTodo = (id) => {\r\n\treturn {\r\n\t\ttype: \"DELETE_TODO\",\r\n\t\tid,\r\n\t};\r\n};\r\nexport const removeTodo = () => {\r\n\treturn {\r\n\t\ttype: \"REMOVE_TODO\",\r\n\t};\r\n};\r\n","import React from \"react\";\nimport Todo from \"./components/Todo\";\n\nconst App = () => {\n\treturn (\n\t\t<>\n\t\t\t<Todo />\n\t\t</>\n\t);\n};\n\nexport default App;\n","// This reducer will hold the current state and action defination.\r\n\r\nconst initialState = {\r\n\tlist: [],\r\n};\r\n\r\nconst TodoReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"ADD_TODO\":\r\n\t\t\tconst { id, data } = action.payload;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlist: [\r\n\t\t\t\t\t...state.list,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tid: id,\r\n\t\t\t\t\t\tdata: data,\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t};\r\n\r\n\t\tcase \"DELETE_TODO\":\r\n\t\t\tconst newList = state.list.filter((e) => e.id !== action.id);\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlist: newList,\r\n\t\t\t};\r\n\r\n\t\tcase \"REMOVE_TODO\":\r\n\t\t\treturn {\r\n\t\t\t\tlist: [],\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default TodoReducer;\r\n","// Global Reducer, where all of the reducers would be mentioned.\r\n\r\nimport TodoReducer from \"./TodoReducer\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n\tTodoReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","//  Store js plays the main role\r\n//  This is where all of the data is stored.\r\n\r\nimport { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers/Index\";\r\n\r\nconst store = createStore(\r\n\trootReducer,\r\n\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n\r\n// now this store export should be imported to the index.js (main File).\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Redux/Store\";\n\nReactDOM.render(\n\t<>\n\t\t<Provider store={store}>\n\t\t\t{/* Pass Store as a prop */}\n\t\t\t<App />\n\t\t</Provider>\n\t</>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}